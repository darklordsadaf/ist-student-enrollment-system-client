[{"F:\\Varsity-Project\\student-enrollment-system\\student-enrollment-system\\src\\index.js":"1","F:\\Varsity-Project\\student-enrollment-system\\student-enrollment-system\\src\\App.js":"2","F:\\Varsity-Project\\student-enrollment-system\\student-enrollment-system\\src\\reportWebVitals.js":"3","F:\\Varsity-Project\\student-enrollment-system\\student-enrollment-system\\src\\components\\Login\\Login.js":"4","F:\\Varsity-Project\\student-enrollment-system\\student-enrollment-system\\src\\components\\Department\\Department\\Department.js":"5","F:\\Varsity-Project\\student-enrollment-system\\student-enrollment-system\\src\\components\\Department\\DepartmentCard\\DepartmentCard.js":"6","F:\\Varsity-Project\\student-enrollment-system\\student-enrollment-system\\src\\components\\Home\\Home\\Home.js":"7","F:\\Varsity-Project\\student-enrollment-system\\student-enrollment-system\\src\\components\\Home\\Navbar\\Navbar.js":"8","F:\\Varsity-Project\\student-enrollment-system\\student-enrollment-system\\src\\components\\Home\\HeaderMain\\HeaderMain.js":"9","F:\\Varsity-Project\\student-enrollment-system\\student-enrollment-system\\src\\components\\StudentsInfo\\StudentsInfo\\StudentsInfo.js":"10","F:\\Varsity-Project\\student-enrollment-system\\student-enrollment-system\\src\\components\\Login\\PrivateRoute.js":"11","F:\\Varsity-Project\\student-enrollment-system\\student-enrollment-system\\src\\components\\Login\\firebase.config.js":"12","F:\\Varsity-Project\\student-enrollment-system\\student-enrollment-system\\src\\components\\Login\\LoginForm.js":"13","F:\\Varsity-Project\\student-enrollment-system\\student-enrollment-system\\src\\components\\Login\\SignUpForm.js":"14","F:\\Varsity-Project\\student-enrollment-system\\student-enrollment-system\\src\\components\\StudentsInfo\\Header\\Header.js":"15","F:\\Varsity-Project\\student-enrollment-system\\student-enrollment-system\\src\\components\\StudentsInfo\\Sidebar\\Sidebar.js":"16","F:\\Varsity-Project\\student-enrollment-system\\student-enrollment-system\\src\\components\\StudentsInfo\\EnrollStudent\\EnrollStudent.js":"17","F:\\Varsity-Project\\student-enrollment-system\\student-enrollment-system\\src\\components\\StudentsInfo\\AddDepartment\\AddDepartment.js":"18","F:\\Varsity-Project\\student-enrollment-system\\student-enrollment-system\\src\\components\\StudentsInfo\\MakeAdmin\\MakeAdmin.js":"19","F:\\Varsity-Project\\student-enrollment-system\\student-enrollment-system\\src\\components\\StudentsInfo\\AllStudentsData\\AllStudentsData.js":"20","F:\\Varsity-Project\\student-enrollment-system\\student-enrollment-system\\src\\components\\StudentsInfo\\StudentProfile\\StudentProfile.js":"21","F:\\Varsity-Project\\student-enrollment-system\\student-enrollment-system\\src\\components\\StudentsInfo\\StudentByDepartment\\StudentByDepartment.js":"22","F:\\Varsity-Project\\student-enrollment-system\\student-enrollment-system\\src\\components\\StudentsInfo\\UpdateStudent\\UpdateStudent.js":"23","F:\\Varsity-Project\\student-enrollment-system\\student-enrollment-system\\src\\components\\NotAccess\\NoMatch\\NoMatch.js":"24","F:\\Varsity-Project\\student-enrollment-system\\student-enrollment-system\\src\\components\\NotAccess\\Unauthorized\\Unauthorized.js":"25"},{"size":500,"mtime":499162500000,"results":"26","hashOfConfig":"27"},{"size":2409,"mtime":1611521090737,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":499162500000,"results":"29","hashOfConfig":"27"},{"size":8955,"mtime":1611527569800,"results":"30","hashOfConfig":"27"},{"size":3188,"mtime":1611529928623,"results":"31","hashOfConfig":"27"},{"size":540,"mtime":1611523499853,"results":"32","hashOfConfig":"27"},{"size":356,"mtime":1611598330416,"results":"33","hashOfConfig":"27"},{"size":3421,"mtime":1611527569868,"results":"34","hashOfConfig":"27"},{"size":1557,"mtime":1610986912320,"results":"35","hashOfConfig":"27"},{"size":3787,"mtime":1611597676620,"results":"36","hashOfConfig":"27"},{"size":782,"mtime":1610733638708,"results":"37","hashOfConfig":"27"},{"size":394,"mtime":1610780855177,"results":"38","hashOfConfig":"27"},{"size":1964,"mtime":1611521262798,"results":"39","hashOfConfig":"27"},{"size":2484,"mtime":1611522396253,"results":"40","hashOfConfig":"27"},{"size":1807,"mtime":1611596294125,"results":"41","hashOfConfig":"27"},{"size":4154,"mtime":1611596196942,"results":"42","hashOfConfig":"27"},{"size":9631,"mtime":1611600506660,"results":"43","hashOfConfig":"27"},{"size":4196,"mtime":1611597769699,"results":"44","hashOfConfig":"27"},{"size":2638,"mtime":1611527569865,"results":"45","hashOfConfig":"27"},{"size":2248,"mtime":1611523728894,"results":"46","hashOfConfig":"27"},{"size":5398,"mtime":1611597935573,"results":"47","hashOfConfig":"27"},{"size":4327,"mtime":1611527569868,"results":"48","hashOfConfig":"27"},{"size":5810,"mtime":1611527569865,"results":"49","hashOfConfig":"27"},{"size":2307,"mtime":1611520828725,"results":"50","hashOfConfig":"27"},{"size":147,"mtime":1611520800807,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1o6g6ei",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"F:\\Varsity-Project\\student-enrollment-system\\student-enrollment-system\\src\\index.js",[],["107","108"],"F:\\Varsity-Project\\student-enrollment-system\\student-enrollment-system\\src\\App.js",[],"F:\\Varsity-Project\\student-enrollment-system\\student-enrollment-system\\src\\reportWebVitals.js",[],"F:\\Varsity-Project\\student-enrollment-system\\student-enrollment-system\\src\\components\\Login\\Login.js",["109"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport firebaseConfig from './firebase.config';\r\nimport { UserContext } from '../../App';\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport LoginForm from './LoginForm';\r\nimport SignUpForm from './SignUpForm';\r\nimport \"./Login.css\";\r\nimport logo from \"../../images/ICON/istName.PNG\"\r\n\r\n\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst Login = () => {\r\n    const [newUser, setNewUser] = useState(false);\r\n    const [loggedInUser, setLoggedInUser] = useContext(UserContext);\r\n\r\n    const setData = (data) => {\r\n        localStorage.setItem('user', JSON.stringify(data));\r\n    }\r\n    useEffect(() => {\r\n        setLoggedInUser(JSON.parse(localStorage.getItem(\"user\")) || {});\r\n        if (loggedInUser.email) {\r\n            history.replace(from);\r\n        }\r\n    }, []);\r\n\r\n\r\n    const [currentUser, setCurrentUser] = useState({\r\n        isSignedIn: false,\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        error: \"\",\r\n        success: false,\r\n    });\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n    const { from } = location.state || { from: { pathname: \"/\" } };\r\n\r\n    const handleFormToggle = () => {\r\n        setNewUser(!newUser);\r\n    };\r\n\r\n\r\n    if (firebase.apps.length === 0) {\r\n        firebase.initializeApp(firebaseConfig);\r\n    }\r\n\r\n    /* Form validation and give error */\r\n    const [errors, setErrors] = useState({\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        confirmPassword: \"\",\r\n    });\r\n    let pass1, pass2;\r\n    const handleFormValidation = (e) => {\r\n        let isFieldValid = true;\r\n        const newError = { ...errors };\r\n\r\n        if (e.target.name === \"name\") {\r\n            isFieldValid = e.target.value.length > 2;\r\n            if (!isFieldValid) {\r\n                newError[e.target.name] = \"Name is not valid\";\r\n                setErrors(newError);\r\n            } else {\r\n                newError[e.target.name] = \"\";\r\n                setErrors(newError);\r\n            }\r\n        }\r\n\r\n        if (e.target.name === \"email\") {\r\n            isFieldValid = /\\S+@\\S+/.test(e.target.value);\r\n            if (!isFieldValid) {\r\n                newError[e.target.name] = \"Email is not valid\";\r\n                setErrors(newError);\r\n            } else {\r\n                newError[e.target.name] = \"\";\r\n                setErrors(newError);\r\n            }\r\n        }\r\n\r\n        if (e.target.name === \"password\" || e.target.name === \"confirmPassword\") {\r\n            const isPasswordLengthValid = e.target.value.length > 5;\r\n            const passwordHasNumber = /\\d{1}/.test(e.target.value);\r\n\r\n            isFieldValid = isPasswordLengthValid && passwordHasNumber;\r\n\r\n            if (e.target.name === \"password\") {\r\n                pass1 = e.target.value;\r\n                if (!isFieldValid) {\r\n                    newError[e.target.name] = \"Password is not valid\";\r\n                    setErrors(newError);\r\n                } else {\r\n                    newError[e.target.name] = \"\";\r\n                    setErrors(newError);\r\n                }\r\n            }\r\n            if (e.target.name === \"confirmPassword\") {\r\n                pass2 = e.target.value;\r\n                if (!isFieldValid && pass1 !== pass2) {\r\n                    newError[e.target.name] = \"Password is not matched\";\r\n                    setErrors(newError);\r\n                } else {\r\n                    newError[e.target.name] = \"\";\r\n                    setErrors(newError);\r\n                }\r\n            }\r\n        }\r\n\r\n        if (isFieldValid) {\r\n            const newUser = { ...currentUser };\r\n            newUser[e.target.name] = e.target.value;\r\n            setCurrentUser(newUser);\r\n        }\r\n    };\r\n\r\n    /* CREATE NEW USER */\r\n    const handleCreateNewUser = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (!currentUser.email && !currentUser.password) {\r\n            const newError = { ...errors };\r\n            newError.name = \"Please use valid name!\";\r\n            newError.email = \"Please use valid email!\";\r\n            newError.password = \"Please use valid password!\";\r\n            newError.confirmPassword = \"Please is not matched!\";\r\n            setErrors(newError);\r\n        } else {\r\n            firebase\r\n                .auth()\r\n                .createUserWithEmailAndPassword(currentUser.email, currentUser.password)\r\n                .then((result) => {\r\n                    const { displayName, email } = result.user;\r\n                    const newUser = {\r\n                        email: email,\r\n                        name: displayName,\r\n                        success: true,\r\n                        error: \"\",\r\n                    };\r\n                    setCurrentUser(newUser);\r\n\r\n                    setLoggedInUser(newUser);\r\n\r\n                    let admin = {};\r\n                    admin.name = currentUser.name;\r\n                    admin.email = currentUser.email.toLowerCase();\r\n\r\n                    if (result) {\r\n                        fetch('https://enigmatic-wildwood-13681.herokuapp.com/addAdminName', {\r\n                            method: 'POST',\r\n                            headers: { 'Content-Type': 'application/json' },\r\n                            body: JSON.stringify(admin)\r\n                        })\r\n                            .then(res => res.json())\r\n                            .then(success => {\r\n                                if (success) {\r\n\r\n                                }\r\n                            })\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    const newUser = { ...currentUser };\r\n                    newUser.error = error.message;\r\n                    newUser.success = false;\r\n                    setLoggedInUser(newUser);\r\n                    console.log(error.message);\r\n                });\r\n        }\r\n    };\r\n\r\n    /* SIGN IN with email and password */\r\n    const handleSignIn = (e) => {\r\n        e.preventDefault();\r\n        if (!currentUser.email && !currentUser.password) {\r\n            const newError = { ...errors };\r\n            newError.email = \"Please use valid email!\";\r\n            newError.password = \"Please use valid password!\";\r\n            setErrors(newError);\r\n        } else {\r\n            firebase\r\n                .auth()\r\n                .signInWithEmailAndPassword(currentUser.email, currentUser.password)\r\n                .then((result) => {\r\n                    const { displayName, email } = result.user;\r\n                    const newUser = {\r\n                        isSignedIn: true,\r\n                        email: email,\r\n                        name: displayName,\r\n                        success: true,\r\n                        error: \"\",\r\n                    };\r\n                    setCurrentUser(newUser);\r\n                    setLoggedInUser(newUser);\r\n                    setData(newUser);\r\n\r\n                    history.replace(from);\r\n                })\r\n                .catch((error) => {\r\n                    const newUser = { ...currentUser };\r\n                    newUser.email = \"\";\r\n                    newUser.error = error.message;\r\n                    newUser.success = false;\r\n                    setLoggedInUser(newUser);\r\n                });\r\n        }\r\n    };\r\n    return (\r\n        <section className=\"loginPage-signup-login text-center\">\r\n            <Link to='/'>\r\n                <div className=\"d-flex justify-content-center mb-5\">\r\n                    <img style={{ width: '600px', marginTop: '-90px' }} src={logo} alt=\"\" />\r\n\r\n                </div>\r\n            </Link>\r\n            {currentUser.success && (\r\n                <div className=\"alert alert-success\" role=\"alert\">\r\n                    {!newUser ? \"Please login first\" : \"User registered successfully... Now wait for admin Approval...\"}\r\n                </div>\r\n            )}\r\n            {loggedInUser.error && (\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                    {loggedInUser.error}\r\n                </div>\r\n            )}\r\n            <div className=\"container\">\r\n                {newUser ? (\r\n                    <SignUpForm\r\n                        toggleUser={handleFormToggle}\r\n                        validation={handleFormValidation}\r\n                        submit={handleCreateNewUser}\r\n                        errors={errors}\r\n                    ></SignUpForm>\r\n                ) : (\r\n                        <LoginForm\r\n                            toggleUser={handleFormToggle}\r\n                            validation={handleFormValidation}\r\n                            submit={handleSignIn}\r\n                            errors={errors}\r\n                        ></LoginForm>\r\n                    )}\r\n                <br />\r\n\r\n\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Login;","F:\\Varsity-Project\\student-enrollment-system\\student-enrollment-system\\src\\components\\Department\\Department\\Department.js",["110"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport DepartmentCard from '../DepartmentCard/DepartmentCard';\r\nimport { Link } from 'react-router-dom';\r\nimport logo from '../../../images/ICON/ist.png';\r\nimport { UserContext } from '../../../App';\r\nimport Unauthorized from '../../NotAccess/Unauthorized/Unauthorized';\r\n\r\n\r\nconst Department = () => {\r\n    const [loggedInUser, setLoggedInUser] = useContext(UserContext);\r\n    const [isAdmin, setIsAdmin] = useState(false);\r\n    const [dept, setDept] = useState([]);\r\n\r\n    function MyComponent() {\r\n        useEffect(() => {\r\n            setDept(JSON.parse(localStorage.getItem(\"dept\")) || {});\r\n        }, [])\r\n    }\r\n\r\n    function MyComponent2() {\r\n        useEffect(() => {\r\n            fetch('https://enigmatic-wildwood-13681.herokuapp.com/departments')\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    if (data) {\r\n                        localStorage.setItem('dept', JSON.stringify(data));\r\n                    }\r\n                    setDept(data)\r\n                })\r\n        }, [])\r\n    }\r\n\r\n\r\n    if (localStorage.getItem(\"dept\")) {\r\n        MyComponent();\r\n    }\r\n    else {\r\n        MyComponent2()\r\n    }\r\n\r\n    function MyComponent3() {\r\n        useEffect(() => {\r\n            setIsAdmin(JSON.parse(localStorage.getItem(\"admin\")) || {});\r\n        }, [])\r\n    }\r\n    function MyComponent4() {\r\n        useEffect(() => {\r\n            fetch('https://enigmatic-wildwood-13681.herokuapp.com/isAdmin', {\r\n                method: 'POST',\r\n                headers: { 'content-type': 'application/json' },\r\n                body: JSON.stringify({ email: loggedInUser.email })\r\n            })\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    localStorage.setItem('admin', JSON.stringify(data));\r\n                    setIsAdmin(data);\r\n                });\r\n        }, [])\r\n    }\r\n    if (localStorage.getItem(\"admin\")) {\r\n        MyComponent3();\r\n    }\r\n    else {\r\n        MyComponent4();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                isAdmin === true ? <section className=\" container\">\r\n                    <Link to='/'>\r\n                        <div className=\"d-flex justify-content-center \">\r\n                            <img style={{ width: \"200px\", height: \"200px\" }} src={logo} alt=\"\" />\r\n\r\n                        </div>\r\n                    </Link>\r\n                    <h2 className=\"text-center mb-5\">All <span className=\"text-yellow\">Department</span> </h2>\r\n                    {\r\n                        dept.length === 0 && <img className=\"rounded mx-auto d-block mt-4 pt-3\" style={{}} src=\"https://media1.giphy.com/media/3oEjI6SIIHBdRxXI40/giphy.gif\" alt=\"\" />\r\n                    }\r\n                    <div className=\"row\">\r\n\r\n                        {\r\n                            dept.map(department => <DepartmentCard key={department._id} department={department}></DepartmentCard>)\r\n                        }\r\n                    </div>\r\n                </section>\r\n                    : <Unauthorized />\r\n            }\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Department;","F:\\Varsity-Project\\student-enrollment-system\\student-enrollment-system\\src\\components\\Department\\DepartmentCard\\DepartmentCard.js",[],"F:\\Varsity-Project\\student-enrollment-system\\student-enrollment-system\\src\\components\\Home\\Home\\Home.js",[],"F:\\Varsity-Project\\student-enrollment-system\\student-enrollment-system\\src\\components\\Home\\Navbar\\Navbar.js",["111"],"import React, { useContext, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { UserContext } from '../../../App';\r\nimport logo from '../../../images/ICON/ist.png';\r\nimport './Navbar.css'\r\n\r\n\r\nconst Navbar = () => {\r\n    const [loggedInUser, setLoggedInUser] = useContext(UserContext);\r\n    const [adminName, setAdminName] = useState([]);\r\n    const logout = () => {\r\n        localStorage.removeItem(\"user\");\r\n        localStorage.removeItem(\"adminName\");\r\n        localStorage.removeItem(\"dept\");\r\n        localStorage.removeItem(\"admin\");\r\n        setLoggedInUser({})\r\n    }\r\n    if (loggedInUser.email) {\r\n        fetch('https://enigmatic-wildwood-13681.herokuapp.com/adminName', {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ email: loggedInUser.email })\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                setAdminName(data[0].name);\r\n                localStorage.setItem('adminName', JSON.stringify(data[0].name));\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar navbar-expand-lg navbar-light\">\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-2 pl-5\">\r\n                        <img style={{ width: \"100px\", height: \"100px\" }} src={logo} alt=\"\" />\r\n\r\n                    </div>\r\n                    <div className=\"col-md-10 mt-3 pl-5\">\r\n                        <h4 style={{ color: '#FB9937' }} className=\"\">Institute of Science and Technology</h4>\r\n                        <small style={{ color: '#7AB259' }} className=\"\">Since 1993</small>\r\n                    </div>\r\n                </div>\r\n\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\" navbar-nav ml-auto mr-5\">\r\n\r\n                        <li className=\"nav-item \">\r\n                            {loggedInUser.isSignedIn ? <Link to='/' style={{ background: '#111430', borderRadius: '5px' }} className=\"\" className=\"nav-link mr-4 text-white px-5\" onClick={logout}>Log Out</Link> :\r\n                                <Link to=\"/login\" style={{ background: '#111430', borderRadius: '5px' }} className=\"nav-link mr-4 text-white px-4\" ><div>Login</div></Link>\r\n                            }\r\n\r\n\r\n\r\n                        </li>\r\n\r\n                        <li className=\"nav-item\">\r\n                            <div style={{ margin: '9px 10px 0px 10px' }}>\r\n\r\n\r\n\r\n                                {\r\n                                    loggedInUser.email && <p style={{ color: '#FB9937' }}>{\r\n                                        localStorage.getItem(\"adminName\") ?\r\n                                            JSON.parse(localStorage.getItem(\"adminName\")) : adminName\r\n                                    }</p>\r\n                                }\r\n                            </div>\r\n                        </li>\r\n\r\n                    </ul>\r\n\r\n                </div>\r\n            </nav>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Navbar;","F:\\Varsity-Project\\student-enrollment-system\\student-enrollment-system\\src\\components\\Home\\HeaderMain\\HeaderMain.js",[],"F:\\Varsity-Project\\student-enrollment-system\\student-enrollment-system\\src\\components\\StudentsInfo\\StudentsInfo\\StudentsInfo.js",[],"F:\\Varsity-Project\\student-enrollment-system\\student-enrollment-system\\src\\components\\Login\\PrivateRoute.js",["112"],"import React, { useContext } from 'react';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport { UserContext } from '../../App';\r\n\r\nconst PrivateRoute = ({ children, ...rest }) => {\r\n    const [loggedInUser, setLoggedInUser] = useContext(UserContext)\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={({ location }) =>\r\n                loggedInUser.email ? (\r\n                    children\r\n                ) : (\r\n                        <Redirect\r\n                            to={{\r\n                                pathname: \"/login\",\r\n                                state: { from: location }\r\n                            }}\r\n                        />\r\n                    )\r\n            }\r\n        />\r\n    );\r\n};\r\n\r\nexport default PrivateRoute;","F:\\Varsity-Project\\student-enrollment-system\\student-enrollment-system\\src\\components\\Login\\firebase.config.js",[],"F:\\Varsity-Project\\student-enrollment-system\\student-enrollment-system\\src\\components\\Login\\LoginForm.js",[],"F:\\Varsity-Project\\student-enrollment-system\\student-enrollment-system\\src\\components\\Login\\SignUpForm.js",[],"F:\\Varsity-Project\\student-enrollment-system\\student-enrollment-system\\src\\components\\StudentsInfo\\Header\\Header.js",["113","114"],"F:\\Varsity-Project\\student-enrollment-system\\student-enrollment-system\\src\\components\\StudentsInfo\\Sidebar\\Sidebar.js",[],"F:\\Varsity-Project\\student-enrollment-system\\student-enrollment-system\\src\\components\\StudentsInfo\\EnrollStudent\\EnrollStudent.js",[],"F:\\Varsity-Project\\student-enrollment-system\\student-enrollment-system\\src\\components\\StudentsInfo\\AddDepartment\\AddDepartment.js",[],"F:\\Varsity-Project\\student-enrollment-system\\student-enrollment-system\\src\\components\\StudentsInfo\\MakeAdmin\\MakeAdmin.js",[],"F:\\Varsity-Project\\student-enrollment-system\\student-enrollment-system\\src\\components\\StudentsInfo\\AllStudentsData\\AllStudentsData.js",[],"F:\\Varsity-Project\\student-enrollment-system\\student-enrollment-system\\src\\components\\StudentsInfo\\StudentProfile\\StudentProfile.js",["115","116"],"F:\\Varsity-Project\\student-enrollment-system\\student-enrollment-system\\src\\components\\StudentsInfo\\StudentByDepartment\\StudentByDepartment.js",[],"F:\\Varsity-Project\\student-enrollment-system\\student-enrollment-system\\src\\components\\StudentsInfo\\UpdateStudent\\UpdateStudent.js",[],"F:\\Varsity-Project\\student-enrollment-system\\student-enrollment-system\\src\\components\\NotAccess\\NoMatch\\NoMatch.js",[],"F:\\Varsity-Project\\student-enrollment-system\\student-enrollment-system\\src\\components\\NotAccess\\Unauthorized\\Unauthorized.js",[],{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":28,"column":8,"nodeType":"123","endLine":28,"endColumn":10,"suggestions":"124"},{"ruleId":"125","severity":1,"message":"126","line":10,"column":26,"nodeType":"127","messageId":"128","endLine":10,"endColumn":41},{"ruleId":"129","severity":1,"message":"130","line":54,"column":137,"nodeType":"131","endLine":54,"endColumn":178},{"ruleId":"125","severity":1,"message":"126","line":6,"column":26,"nodeType":"127","messageId":"128","endLine":6,"endColumn":41},{"ruleId":"125","severity":1,"message":"126","line":7,"column":26,"nodeType":"127","messageId":"128","endLine":7,"endColumn":41},{"ruleId":"125","severity":1,"message":"132","line":8,"column":12,"nodeType":"127","messageId":"128","endLine":8,"endColumn":21},{"ruleId":"125","severity":1,"message":"133","line":14,"column":12,"nodeType":"127","messageId":"128","endLine":14,"endColumn":19},{"ruleId":"134","severity":1,"message":"135","line":89,"column":51,"nodeType":"136","endLine":89,"endColumn":246},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'from', 'history', 'loggedInUser.email', and 'setLoggedInUser'. Either include them or remove the dependency array.","ArrayExpression",["139"],"no-unused-vars","'setLoggedInUser' is assigned a value but never used.","Identifier","unusedVar","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'adminName' is assigned a value but never used.","'loading' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"140","fix":"141"},"Update the dependencies array to be: [from, history, loggedInUser.email, setLoggedInUser]",{"range":"142","text":"143"},[920,922],"[from, history, loggedInUser.email, setLoggedInUser]"]